---
#
# Install elasticsearch
#
- name: take off swap file
  shell: "sudo swapoff -a"

- name: rpm -ql elasticsearch
  shell: rpm -ql elasticsearch | grep -v not | wc -l 
  register: es_installed
- debug:
    var: es_installed

- name: ps elasticsearch
  shell: ps -ef | grep elasticsearch | grep -v grep | wc -l
  register: es_state
- debug: 
    var: es_state


- name: Uninstall elasticsearch
  yum:
    name: elasticsearch
    state: absent
  when: es_installed.stdout != "0" 

- name: remove all elasticsearch file
  shell: "find / -name '*elasticsearch*' | xargs rm -rf"    
  when: es_installed.stdout != "0" 

- name: remove elk repo
  file: 
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/yum.repos.d/elk.repo 


- name: set elk6 repo
  yum_repository:
    name: elasticstack-6.x
    description: Elasticsearch repository for 6.x packages
    baseurl: https://mirrors.tuna.tsinghua.edu.cn/elasticstack/yum/elastic-6.x/
    enabled: yes
    gpgcheck: 0
    file: elk
  when: elk_version == "6.2.4"


- name: set elk7 repo
  yum_repository:
    name: elasticstack-7.x
    description: Elasticsearch repository for 7.x packages
    baseurl: https://mirrors.tuna.tsinghua.edu.cn/elasticstack/yum/elastic-7.x/
    enabled: yes
    gpgcheck: 0
    file: elk
  when: elk_version == "7.4.0"


- name: Install expect
  yum:
    name: expect
    state: present
  when: elk_version == "6.2.4"

- name: Install elasticsearch
  yum:
    name: "elasticsearch-{{ elk_version }}"
    state: present

- name: create new prent path
  file:
    path: "{{ item }}"
    group: root
    owner: root
    mode: 0755
  loop:
    - /data/lib
    - /data/log

- name: create new path
  file:
    path: "{{ item }}"
    group: elasticsearch
    owner: elasticsearch
    mode: 0755
    state: directory
  loop:
    - "{{ newlogpath }}"
    - "{{ newlibpath }}"
    - "{{ databackpath }}"


- name: create certs path
  file:
    path: "{{ certpath }}"
    group: elasticsearch
    owner: root
    mode: 0755
    state: directory


- name: delete old path
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ oldlogpath }}"
    - "{{ oldlibpath }}"


- name: link new path to old path
  file:
    src: "{{ item[0] }}"
    path: "{{ item[1] }}"
    state: link
    owner: elasticsearch
    group: elasticsearch
    force: yes
  loop:
    - ["{{ newlogpath }}", "{{ oldlogpath }}"]
    - ["{{ newlibpath }}", "{{ oldlibpath }}"]


- name: create jvm.options with template
  template:
    src: "jvm.options-{{ elk_version }}.j2"
    dest: "{{ packagepath }}/jvm.options"
    force: yes
    mode: 0660

 
- name: create elasticsearch.yml with template
  template:
    src: "elasticsearch-{{ elk_version }}.yml.j2"
    dest: "{{ packagepath }}/elasticsearch.yml"
    owner: root
    group: elasticsearch
    mode: 0660
    force: yes


- name: copy ca files
  copy:
    src: "{{ ca_file }}"
    dest: "{{ certpath }}/{{ ca_file }}"
    owner: root
    group: elasticsearch
    mode: 0600


- name: copy cert files
  copy:
    src: "{{ cert_file }}"
    dest: "{{ certpath }}/{{ cert_file }}"
    owner: root
    group: elasticsearch
    mode: 0644


- name: copy jar files
  copy:
    src: x-pack-core-7.4.0.jar
    dest: /usr/share/elasticsearch/modules/x-pack-core/
    owner: root
    group: root
    mode: 0644
    force: yes
  when: elk_version == "7.4.0"

- name: download xpack
  get_url:
    url: "{{ xpackurl }}"
    dest: /tmp
    force: no
    timeout: 30
  when: elk_version == "6.2.4" 

- name: copy installed xpack shell
  template:
    src: install-xpack.sh
    dest: /root/install-xpack.sh
    mode: 0755
    force: yes
  when: elk_version == "6.2.4"

- name: install xpack
  shell: "/root/install-xpack.sh"
  when: elk_version == "6.2.4"

- name: enable elasticsearch
  systemd:
    name: elasticsearch
    enabled: yes
    daemon_reload: yes


- name: started elasticsearch
  # systemd:
  #   naem: elasticsearch
  #   state: started

  shell: "systemctl start elasticsearch"

- name: When this step is completed, the logstash system installation is completed 
  wait_for:
    host: "{{ es_network_host }}"
    port: 9200
    delay: 10
